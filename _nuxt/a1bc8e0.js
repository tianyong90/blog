(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{246:function(n,e){n.exports={html:'<p><img src="./install_puppeteer.jpg" alt="install puppeteer"></p>\n<p>采集网页内容是一项很常见的需求，比较传统的静态页面，curl 就能搞定。但如果页面中有动态加载的内容，比如有些页面里通过 ajax 加载的文章正文内容，又如果有些页面加载完成后进行了一些额外处理（图片地址替换等等……）而你想采集这些处理过后的内容。那么牛逼闪闪的 curl 也束手无策了。</p>\n<p>做过类似需求的人可能会说，老铁，上 PhantomJS 啊！</p>\n<p>没错，这是一个办法，而且在相当长的时间里 PhantomJS 是为数不多的能解决这类需求的工具里的佼佼者。</p>\n<p>但今天这里要介绍的是一个后来居上的工具 -- puppeteer，它是随着 Chrome Headless 技术兴起而快速发展起来的。而且非常关键的是，puppeteer 由 Chrome 的官方团队开发和维护，可以说相当靠谱了！</p>\n<p>puppeteer 是一个 js 包，要想在 Laravel 中使用，得借助于另一神器<code>spatie/browsershot</code>。</p>\n<h2 id="安装"><a class="header-anchor" href="#安装">#</a> 安装</h2>\n<ol>\n<li>\n<p>安装 <a href="https://github.com/spatie/browsershot">spatie/browsershot</a></p>\n<p>browsershot 是一个 composer 包，出自于大神团队 <a href="https://github.com/spatie">spatie</a></p>\n\x3c!--beforebegin--\x3e<div class="language-bash extra-class">\x3c!--afterbegin--\x3e<pre v-pre class="language-bash"><code>$ <span class="token function">composer</span> require spatie/browsershot\n</code></pre>\n\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e</li>\n<li>\n<p>安装 <a href="https://github.com/GoogleChrome/puppeteer">puppeteer</a></p>\n\x3c!--beforebegin--\x3e<div class="language-shell extra-class">\x3c!--afterbegin--\x3e<pre v-pre class="language-shell"><code>$ <span class="token function">npm</span> i puppeteer --save\n</code></pre>\n\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e<blockquote>\n<p><strong>也可以全局安全 puppeteer 但就个人经验而言，在项目中安装是比较推荐的做法，因为这样不同项目不会同时受全局安装的 puppeteer 影响，此外项目中安装也方便使用 phpdeployer 进行升级（phpdeploy 升级时不会影响线上项目运行，要知道升级/安装 puppeteer 可是很费时的，有时候还不能保证一次成功）。</strong>\n安装 puppeteer 时会下载 Chromium-Browser，鉴于咱特殊国情，很有可能出现无法下载的情况，对此，就请大家各显神通吧……</p>\n</blockquote>\n</li>\n</ol>\n<h2 id="使用"><a class="header-anchor" href="#使用">#</a> 使用</h2>\n<p>以采集今日头条手机版页面文章内容为例。</p>\n\x3c!--beforebegin--\x3e<div class="language-php extra-class">\x3c!--afterbegin--\x3e<pre v-pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Spatie<span class="token punctuation">\\</span>Browsershot<span class="token punctuation">\\</span>Browsershot</span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">getBodyHtml</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token variable">$newsUrl</span> <span class="token operator">=</span> <span class="token single-quoted-string string">\'https://m.toutiao.com/i6546884151050502660/\'</span><span class="token punctuation">;</span>\n\n    <span class="token variable">$html</span> <span class="token operator">=</span> Browsershot<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token variable">$newsUrl</span><span class="token punctuation">)</span>\n        <span class="token operator">-</span><span class="token operator">></span><span class="token function">windowSize</span><span class="token punctuation">(</span><span class="token number">480</span><span class="token punctuation">,</span> <span class="token number">800</span><span class="token punctuation">)</span>\n        <span class="token operator">-</span><span class="token operator">></span><span class="token function">userAgent</span><span class="token punctuation">(</span><span class="token single-quoted-string string">\'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Mobile Safari/537.36\'</span><span class="token punctuation">)</span>\n        <span class="token operator">-</span><span class="token operator">></span><span class="token function">mobile</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token operator">-</span><span class="token operator">></span><span class="token function">touch</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token operator">-</span><span class="token operator">></span><span class="token function">bodyHtml</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    \\<span class="token package">Log</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token variable">$html</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e<p>运行后可以在日志中看到如下内容（截图中只是其中部分）</p>\n<p><img src="./toutiao_log.jpg" alt="日志"></p>\n<p>此外，也可以将页面保存为图片或 PDF 文件。</p>\n\x3c!--beforebegin--\x3e<div class="language-php extra-class">\x3c!--afterbegin--\x3e<pre v-pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Spatie<span class="token punctuation">\\</span>Browsershot<span class="token punctuation">\\</span>Browsershot</span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">getBodyHtml</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token variable">$newsUrl</span> <span class="token operator">=</span> <span class="token single-quoted-string string">\'https://m.toutiao.com/i6546884151050502660/\'</span><span class="token punctuation">;</span>\n\n    Browsershot<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token variable">$newsUrl</span><span class="token punctuation">)</span>\n        <span class="token operator">-</span><span class="token operator">></span><span class="token function">windowSize</span><span class="token punctuation">(</span><span class="token number">480</span><span class="token punctuation">,</span> <span class="token number">800</span><span class="token punctuation">)</span>\n        <span class="token operator">-</span><span class="token operator">></span><span class="token function">userAgent</span><span class="token punctuation">(</span><span class="token single-quoted-string string">\'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Mobile Safari/537.36\'</span><span class="token punctuation">)</span>\n        <span class="token operator">-</span><span class="token operator">></span><span class="token function">mobile</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token operator">-</span><span class="token operator">></span><span class="token function">touch</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token operator">-</span><span class="token operator">></span><span class="token function">setDelay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>\n        <span class="token operator">-</span><span class="token operator">></span><span class="token function">save</span><span class="token punctuation">(</span><span class="token function">public_path</span><span class="token punctuation">(</span><span class="token single-quoted-string string">\'images/toutiao.jpg\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e<p><img src="./toutiao.jpg" alt="结果"></p>\n<p>图片里那些框与系统字体有关。代码中使用了一个 setDelay() 方法，是为了让内容加载完成后再进行截图，简单粗暴，可能不是最好的解决办法。</p>\n<h2 id="可能出现的问题"><a class="header-anchor" href="#可能出现的问题">#</a> 可能出现的问题</h2>\n<ul>\n<li>\n<p>系统得支持 Chromium 浏览器，当然现在绝大部分浏览器是支持的，要不然也没法，还是用 PhantomJS 吧。</p>\n</li>\n<li>\n<p>项目中安装了 puppeteer 后调用时有可能出现权限问题，这就需要对项目下 /node_modules/puppeteer 目录赋予适当的权限。</p>\n</li>\n</ul>\n<h2 id="总结"><a class="header-anchor" href="#总结">#</a> 总结</h2>\n<p>puppeteer 被应用于测试、采集等场景，是一个非常有力的工具。对于轻度的采集任务，是够用的，比如本文这类在 Laravel (php) 里来用采集一些小页面，但如果需要快速采集大量内容，还是 Python 啥的吧。😄</p>\n',attributes:{title:"Laravel 中使用 puppeteer 采集异步加载的网页内容",date:"2019-03-10T16:44:31.000Z",top_img:"./top_img.png",tags:["laravel","puppeteer","采集"],categories:["php","Laravel"]}}}}]);